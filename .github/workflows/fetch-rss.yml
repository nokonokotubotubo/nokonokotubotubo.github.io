name: RSS記事取得

on:
  schedule:
    - cron: '0 * * * *'  # 1時間間隔で実行
  workflow_dispatch:     # 手動実行も可能

jobs:
  fetch-rss:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install MeCab and dependencies
      run: |
        sudo apt update
        sudo apt install -y mecab libmecab-dev mecab-ipadic-utf8 git make curl xz-utils file sqlite3
        git clone --depth 1 https://github.com/neologd/mecab-ipadic-neologd.git
        cd mecab-ipadic-neologd
        ./bin/install-mecab-ipadic-neologd -y -n -p /usr/lib/mecab/dic/mecab-ipadic-neologd
        
    - name: Download Japanese WordNet (with fallback)
      run: |
        cd .github/workflows
        if [ ! -f "wnjpn.db" ]; then
          echo "WordNetデータベースのダウンロードを試行..."
          # 複数のURLを試行
          URLS=(
            "https://bond-lab.github.io/wnja/data/wnjpn.db.gz"
            "http://compling.hss.ntu.edu.sg/wnja/data/1.1/wnjpn.db.gz"
            "https://github.com/bond-lab/wnja/releases/download/1.1/wnjpn.db.gz"
          )
          
          for url in "${URLS[@]}"; do
            echo "Trying: $url"
            if wget -O wnjpn.db.gz "$url" --timeout=30 --tries=2; then
              if gunzip wnjpn.db.gz; then
                echo "WordNetデータベースのダウンロード成功: $url"
                break
              else
                echo "解凍失敗: $url"
                rm -f wnjpn.db.gz wnjpn.db
              fi
            else
              echo "ダウンロード失敗: $url"
            fi
          done
          
          # すべてのURL失敗時の処理
          if [ ! -f "wnjpn.db" ]; then
            echo "⚠️  WordNetダウンロード失敗 - 簡易辞書モードで動作します"
          else
            echo "✅ WordNetデータベース準備完了"
          fi
        fi
        
    - name: Install npm dependencies
      run: |
        cd .github/workflows
        npm install
        
    - name: RSS記事取得スクリプト実行
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: node .github/workflows/fetch-rss.js
      
    - name: Commit and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add mss/articles.json
        git diff --staged --quiet || git commit -m "Update RSS articles $(date)"
        git pull --rebase origin main || true
        git push || (git pull --rebase origin main && git push)
